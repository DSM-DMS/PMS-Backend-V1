buildscript {
    ext {
        springCloudVersion = '2020.0.3'
    }

    dependencies {
        classpath "io.spring.gradle:dependency-management-plugin:1.0.10.RELEASE"
    }

    repositories {
        google()
        mavenCentral()
    }
}

plugins {
    id 'org.springframework.boot' version '2.4.2'
    id 'io.spring.dependency-management' version '1.0.11.RELEASE'
    id 'java'
    id 'com.github.nbaztec.coveralls-jacoco' version '1.2.5'
}

group = 'com.dms'
version = '0.0.1-SNAPSHOT'
sourceCompatibility = '11'
targetCompatibility = '11'

configurations {
    compileOnly {
        extendsFrom annotationProcessor
    }
}

repositories {
    mavenCentral()
}

// For coveralls
apply plugin: 'jacoco'

dependencyManagement {
    imports {
        mavenBom "org.springframework.cloud:spring-cloud-dependencies:$springCloudVersion"
    }
}

dependencies {
    implementation 'org.springframework.boot:spring-boot-starter-web'
    annotationProcessor "org.springframework.boot:spring-boot-configuration-processor"
    // Lombok
    compileOnly 'org.projectlombok:lombok'
    annotationProcessor 'org.projectlombok:lombok'
    // For testing
    testImplementation 'com.h2database:h2'
    testImplementation ('org.springframework.boot:spring-boot-starter-test'){
        exclude module: 'junit'
    }
    // Spring Security
    implementation "org.springframework.boot:spring-boot-starter-security"
    // Swagger
    implementation "io.springfox:springfox-boot-starter:3.0.0"
    // JPA
    implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
    // PostgreSQL Driver
    compile group: 'org.postgresql', name: 'postgresql', version: '42.1.1'
    // Mysql Driver
    compile group: 'mysql', name: 'mysql-connector-java', version: '8.0.19'
    // Validation
    implementation 'org.springframework.boot:spring-boot-starter-validation'
    // JJWT
    compile group: 'io.jsonwebtoken', name: 'jjwt', version: '0.2'
    // Jackson(For JSON Object)
    compile group: 'com.fasterxml.jackson.core', name: 'jackson-databind', version: '2.11.2'
    // Firebase admin sdk
    implementation 'com.google.firebase:firebase-admin:7.2.0'
    // Cloud Feign
    implementation 'org.springframework.cloud:spring-cloud-starter-openfeign'
    // Redis
    implementation 'org.springframework.boot:spring-boot-starter-data-redis'
    // Embedded Redis (For testing)
    testImplementation group: 'it.ozimov', name: 'embedded-redis', version: '0.7.2'
}

test {
    useJUnitPlatform()
}

jacocoTestReport {
    reports {
        xml.enabled = true // coveralls plugin depends on xml format report
        html.enabled = true
    }
}
